@model Web.Principal.Areas.GestionarDashboards.Models.AdminModel 
@{
    ViewBag.Title = "Administración";

    string usuariosCantidad = "0";
    var resultUsuarios = Model.Dashboard.DashboardsXEstado.Where(x => x.Proceso == Utilitario.Constante.EmbarqueConstante.Dashboard_Proceso.USUARIO_REGISTRADO).FirstOrDefault();
    if (resultUsuarios!=null) {

        usuariosCantidad= resultUsuarios.Cantidad;

    }

    var meses = Model.Dashboard.DashboardsXFecha.Select(x=>x.FechaTexto);
    var cantidad = Model.Dashboard.DashboardsXFecha.Select(x => x.Cantidad);

    var resultFechaMes = String.Join(", ", meses.ToArray());
    var resultCantidad = String.Join(", ", cantidad.ToArray());


}


<div class="container-xl px-4 mt-5">

    <div class="d-flex justify-content-between align-items-sm-center flex-column flex-sm-row mb-4">
        <div class="me-4 mb-3 mb-sm-0">
            <h1 class="mb-0">Dashboard</h1>
            <div class="small">
                <span class="fw-500 text-primary"></span>
                @DateTime.Now.ToLongDateString()
            </div>
        </div>


    </div>

    <div class="card card-waves mb-4 mt-5">
        <div class="card-body p-5">
            <div class="row align-items-center justify-content-between">
                <div class="col">
                    <h2 class="text-primary">Bievenido al portal Web</h2>
                    <p class="text-gray-700">Estimado colaborador desde aquí puede realizar diversas acciones referente a la administración del Portal Web.</p>
                    
                </div>
                <div class="col d-none d-lg-block mt-xxl-n4"><img class="img-fluid px-xl-4 mt-xxl-n5" src="~/img/illustrations/statistics.svg" /></div>
            </div>
        </div>
    </div>

    <div class="row">



        <div class="col-xl-6 mb-4">
            <div class="card card-header-actions h-100">
                <div class="card-header">
                    Usuarios Registrados (Mes)

                </div>
                <div class="card-body">
                    <div class="chart-bar"><canvas id="charUsuario" width="100%" height="20"></canvas></div>
                </div>
            </div>
        </div>
        <div class="col-xl-6 mb-4">
            <div class="row">

                <div class="col-lg-6 col-xl-6 mb-4">
                    <div class="card bg-success text-white h-100">
                        <div class="card bg-primary border-0">
                            <div class="card-body">
                                <h5 class="text-white-50">Usuarios Registrados</h5>
                                <div class="mb-4">
                                    <span class="display-4 text-white">@usuariosCantidad</span>
                                    <span class="text-white-50"> por Año</span>
                                </div>

                            </div>
                        </div>
                    </div>




                </div>


            </div>

        </div>





    </div>

    @section Scripts{

        <script src="@Url.Content("~/js/datatables/simple-datatables.js")" crossorigin="anonymous"></script>

        <script src="@Url.Content("~/lib/jquery-validation/dist/jquery.validate.js")"></script>
        <script src="@Url.Content("~/lib/jquery-validation-unobtrusive/dist/jquery.validate.unobtrusive.js")"></script>

        <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.min.js" crossorigin="anonymous"></script>

        <script type="text/javascript">

            // Set new default font family and font color to mimic Bootstrap's default styling
            (Chart.defaults.global.defaultFontFamily = "Metropolis"),
                '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
            Chart.defaults.global.defaultFontColor = "#858796";

            function number_format(number, decimals, dec_point, thousands_sep) {
                // *     example: number_format(1234.56, 2, ',', ' ');
                // *     return: '1 234,56'
                number = (number + "").replace(",", "").replace(" ", "");
                var n = !isFinite(+number) ? 0 : +number,
                    prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
                    sep = typeof thousands_sep === "undefined" ? "," : thousands_sep,
                    dec = typeof dec_point === "undefined" ? "." : dec_point,
                    s = "",
                    toFixedFix = function (n, prec) {
                        var k = Math.pow(10, prec);
                        return "" + Math.round(n * k) / k;
                    };
                // Fix for IE parseFloat(0.55).toFixed(0) = 0;
                s = (prec ? toFixedFix(n, prec) : "" + Math.round(n)).split(".");
                if (s[0].length > 3) {
                    s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
                }
                if ((s[1] || "").length < prec) {
                    s[1] = s[1] || "";
                    s[1] += new Array(prec - s[1].length + 1).join("0");
                }
                return s.join(dec);
            }

            function number_mes(mesDia) {

                if (mesDia == "1") {
                    return "Enero";
                }
                else if (mesDia == "2") {
                    return "Febrero";
                }
                else if (mesDia == "3") {
                    return "Marzo";
                }
                else if (mesDia == "4") {
                    return "Abril";
                }
                else if (mesDia == "5") {
                    return "Mayo";
                }
                else if (mesDia == "6") {
                    return "Junio";
                }
                else if (mesDia == "7") {
                    return "Julio";
                }
                else if (mesDia == "8") {
                    return "Agosto";
                }
                else if (mesDia == "9") {
                    return "Septiembre";
                }
                else if (mesDia == "10") {
                    return "Octubre";
                }
                else if (mesDia == "11") {
                    return "Noviembre";
                }
                else if (mesDia == "12") {
                    return "Dociembre";
                }
            }

            $(document).ready(function () {

                var ctxUsuario = document.getElementById("charUsuario");



                var mesesTexto = "@resultFechaMes";
                var mesesUsuario = mesesTexto.split(",");



            var charUsuario = new Chart(ctxUsuario, {
                    type: "bar",
                    data: {
                        labels: mesesUsuario,
                        datasets: [{
                              label: "Cantidad",
                            backgroundColor: "rgba(0, 97, 242, 1)",
                            hoverBackgroundColor: "rgba(0, 97, 242, 0.9)",
                            borderColor: "#4e73df",
                            data: [@resultCantidad],
                            maxBarThickness: 25
                        }]
                    },
                    options: {
                        maintainAspectRatio: false,
                        layout: {
                            padding: {
                                left: 10,
                                right: 25,
                                top: 25,
                                bottom: 0
                            }
              },
                        scales: {
                  xAxes: [{
                      time: {
                          unit: "month"
                                },
                                gridLines: {
                          display: false,
                                    drawBorder: false
                                },
                                ticks: {
                          maxTicksLimit: 6
                                }
                  }],
                            yAxes: [{
                      ticks: {
                          min: 0,
                                    max: 50,
                                    maxTicksLimit: 5,
                                    padding: 10,
                                    // Include a dollar sign in the ticks
                                    callback: function (value, index, values) {
                              return "" + number_format(value);
                          }
                      },
                                gridLines: {
                          color: "rgb(234, 236, 244)",
                                    zeroLineColor: "rgb(234, 236, 244)",
                                    drawBorder: false,
                                    borderDash: [2],
                                    zeroLineBorderDash: [2]
                                }
                  }]
                        },
                        legend: {
                  display: false
                        },
                        tooltips: {
                  titleMarginBottom: 10,
                            titleFontColor: "#6e707e",
                            titleFontSize: 14,
                            backgroundColor: "rgb(255,255,255)",
                            bodyFontColor: "#858796",
                            borderColor: "#dddfeb",
                            borderWidth: 1,
                            xPadding: 15,
                            yPadding: 15,
                            displayColors: false,
                            caretPadding: 10,
                            callbacks: {
                      label: function (tooltipItem, chart) {
                          var datasetLabel =
                              chart.datasets[tooltipItem.datasetIndex].label || "";
                          return datasetLabel + ": " + number_format(tooltipItem.yLabel);
                      }
                  }
              }
                    }
                });





            });

        </script>


    }

